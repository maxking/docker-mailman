name: Build Docker Images

description: |
  This action builds Docker images for multiple platforms using docker buildx.

inputs:
  image_name:
    description: 'Name of the Docker image (e.g., mailman-core, mailman-web, postorius)'
    required: true
  platform:
    description: 'Target platform for build (e.g., linux/amd64, linux/arm64)'
    required: true
  commit_id:
    description: 'Git commit hash to tag the image'
    required: true
  tag_ns:
    description: 'DockerHub namespace (e.g., your-dockerhub-username)'
    required: true
  dockerfile_path:
    description: 'Path to the Dockerfile'
    required: true
  build_dir:
    description: 'Directory of the build context'
    required: true
  version_full:
    description: 'Full version string (e.g., 0.5.2)'
    required: true
  version_minor:
    description: 'Minor version string (e.g., 0.5)'
    required: true
  version_major:
    description: 'Major version string (e.g., 0)'
    required: true

runs:
  using: "composite"
  steps:
    - name: Build Rolling Release for ${{ inputs.platform }}
      shell: bash
      run: |
        # Replace '/' with '-' to make it tag-safe
        set -e
        safe_platform="${{ inputs.platform }}"
        safe_platform="${safe_platform//\//-}"

        docker buildx build \
          --platform "${{ inputs.platform }}" \
          --label version.git_commit="${{ inputs.commit_id }}" \
          -t "${{ inputs.tag_ns }}/${{ inputs.image_name }}:rolling-${safe_platform}" \
          -f "${{ inputs.dockerfile_path }}" "${{ inputs.build_dir }}" \
          --push

    - name: Tag and Push Versioned Images
      shell: bash
      run: |
        set -e
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then

          safe_platform="${{ inputs.platform }}"
          safe_platform="${safe_platform//\//-}"

          version_full="${{ inputs.version_full }}"
          version_major="${{ inputs.version_major }}"
          version_minor="${{ inputs.version_minor }}"

          for version_tag in "$version_full" "${version_major}.${version_minor}"; do
            echo "Tagging and pushing: $version_tag"
            docker buildx build \
              --platform "${{ inputs.platform }}" \
              --label version.git_commit="${{ inputs.commit_id }}" \
              -t "${{ inputs.tag_ns }}/${{ inputs.image_name }}:${version_tag}" \
              -f "${{ inputs.dockerfile_path }}" "${{ inputs.build_dir }}" \
              --push
          done
        else
          echo "No git tag detected; skipping versioned image tagging."
        fi
